apiVersion: v1
items:
- apiVersion: platform.confluent.io/v1beta1
  kind: Kafka
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"platform.confluent.io/v1beta1","kind":"Kafka","metadata":{"annotations":{},"name":"kafka","namespace":"confluent"},"spec":{"dataVolumeCapacity":"10Gi","image":{"application":"confluentinc/cp-server-operator:6.1.0.0","init":"confluentinc/cp-init-container-operator:6.1.0.0"},"metricReporter":{"enabled":true},"replicas":3}}
    creationTimestamp: "2021-06-21T18:08:36Z"
    generation: 1
    managedFields:
    - apiVersion: platform.confluent.io/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          .: {}
          f:dataVolumeCapacity: {}
          f:image:
            .: {}
            f:application: {}
            f:init: {}
          f:metricReporter:
            .: {}
            f:enabled: {}
          f:replicas: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2021-06-21T18:08:36Z"
    name: kafka
    namespace: confluent
    resourceVersion: "10621"
    uid: 05fc853c-634e-4cea-9cb3-032e621a71e6
  spec:
    dataVolumeCapacity: 10Gi
    image:
      application: confluentinc/cp-server-operator:6.1.0.0
      init: confluentinc/cp-init-container-operator:6.1.0.0
    metricReporter:
      enabled: true
    replicas: 3
    # can we just enter the resource limts here in the spec??
    # resources:
    # limits:
    #   cpu: "2"
    #   memory: 12Gi
    # requests:
    #   cpu: "1"
    #   memory: 2Gi
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
